{"version":3,"sources":["../src/index.ts","../src/utils/convert.ts","../src/utils/misc.ts","../src/utils/parse-utils.ts","../src/utils/styles.ts","../src/components/Button/ButtonTypes.tsx","../src/components/Button/Button.tsx","../src/components/Button/ButtonContent.tsx","../src/components/Button/Spinner.tsx","../src/components/Expandable/Expandable.tsx","../src/components/Icons/index.tsx","../src/components/InstantNoodles/InstantNoodles.tsx","../src/components/ReportDisplay/ReportContent.tsx","../src/components/Suite/Suite.tsx","../src/components/Suite/helpers.tsx","../src/components/Suite/SuiteResults.tsx","../src/components/Loader/Loader.tsx","../src/components/ReportDisplay/ReportHeader.tsx","../src/components/ReportDisplay/ToggleReportButton.tsx","../src/hooks/use-event-listener.tsx","../src/hooks/use-isomorphic-layout-effect.tsx","../src/hooks/use-on-click-outside.tsx","../src/components/ReportDisplay/ReportDisplay.tsx","../src/components/ReportFrame/ReportFrame.tsx","../src/components/ReportFrame/Content.tsx","../src/components/ReportFrame/createHead.tsx","../src/components/ReportFrame/Context.tsx","../src/hooks/use-local-storage.tsx","../src/hooks/use-execute-test-suites.tsx","../src/hooks/use-debounced-callback.tsx","../src/constants.tsx","../src/spec-setup.tsx"],"sourcesContent":["import { updateConfig } from \"react-microwave\"\nimport { InstantNoodles } from \"./components\"\nimport { configureSpecSuite } from \"./spec-setup\"\n\nexport { InstantNoodles, updateConfig, configureSpecSuite }\nexport * from \"./types\"\n","export function msToString(ms: number): string {\n  if (!isFinite(ms)) return \"-\"\n\n  if (ms === 0) return \"0\"\n\n  if (ms < 1000) return ms.toFixed(0) + \"ms\"\n\n  const seconds = ms / 1000\n  if (seconds < 60) return seconds.toFixed(1) + \"s\"\n\n  const minutes = seconds / 60\n  if (minutes < 60) return minutes.toFixed(1) + \"m\"\n\n  const hours = minutes / 60\n  if (hours < 24) return hours.toFixed(1) + \"h\"\n\n  const days = hours / 24\n  return days.toFixed(1) + \"d\"\n}\n","export const noop = () => {}\n","export function isString(value: any): value is string {\n  return typeof value === \"string\"\n}\n\nexport function isUndefined(value: any): value is undefined {\n  return typeof value === \"undefined\"\n}\n\nexport function isNull(value: any): value is null {\n  return value === null\n}\n\nexport function isNil(value: any): value is null | undefined {\n  return isNull(value) || isUndefined(value)\n}\n\nexport function isValid<T>(value: T | undefined | null): value is T {\n  return !isNil(value)\n}\n\n// aliasing this for legacy purposes\nexport function isDefined<T>(value: T | undefined | null): value is T {\n  return isValid(value)\n}\n\nexport function isObject(value: any): value is object {\n  return Object.prototype.toString.call(value) === \"[object Object]\"\n}\n\nexport function keysOf<T extends object, K extends keyof T>(obj: T): K[] {\n  return Object.keys(obj) as K[]\n}\n\nexport function valuesOf<T extends object, K extends keyof T>(obj: T): T[K][] {\n  return Object.values(obj) as T[K][]\n}\n\nexport function parseJSON<T>(value: string | null): T | undefined {\n  try {\n    return isUndefined(value) ? undefined : JSON.parse(value ?? \"\")\n  } catch {\n    console.log(\"parsing error on\", { value })\n    return undefined\n  }\n}\n","export function classNames(...classes: (string[] | string | undefined | null)[]) {\n  if (Array.isArray(classes[0])) {\n    classes = classes[0]\n  }\n  return classes.filter(Boolean).join(\" \")\n}\n","import type { ReactNode, ButtonHTMLAttributes, Ref, HTMLAttributes } from \"react\"\nimport type { CommonProps } from \"../../types\"\nimport { keysOf } from \"../../utils\"\n\nexport const buttonVariantToClassNamesMapping = {\n  standard: {\n    button: \"bg-white border-black\",\n    externalBorder: \"bg-black\",\n    content: \"text-black\",\n  },\n  blue: {\n    button: \"bg-blue-300 border-black\",\n    externalBorder: \"bg-black\",\n    content: \"text-white\",\n  },\n  yellow: {\n    button: \"bg-yellow-300 border-black\",\n    externalBorder: \"bg-black\",\n    content: \"text-black\",\n  },\n  pink: {\n    button: \"bg-pink-200 border-black\",\n    externalBorder: \"bg-black\",\n    content: \"text-black\",\n  },\n  green: {\n    button: \"bg-green-300 border-black\",\n    externalBorder: \"bg-black\",\n    content: \"text-black\",\n  },\n  red: {\n    button: \"bg-red-300 border-black\",\n    externalBorder: \"bg-black\",\n    content: \"text-danger\",\n  },\n  info: {\n    button: \"bg-blue-200 border-black\",\n    externalBorder: \"bg-black\",\n    content: \"text-neutral-600\",\n  },\n  success: {\n    button: \"bg-green-200 border-black\",\n    externalBorder: \"bg-black\",\n    content: \"text-success\",\n  },\n  warning: {\n    button: \"bg-yellow-200 border-black\",\n    externalBorder: \"bg-black\",\n    content: \"text-warning\",\n  },\n  danger: {\n    button: \"bg-red-200 border-black\",\n    externalBorder: \"bg-black\",\n    content: \"text-danger\",\n  },\n  dark: {\n    button: \"bg-black border-neutral-500\",\n    externalBorder: \"bg-black\",\n    content: \"text-white\",\n  },\n  ghost: {\n    button: \"bg-white border-none\",\n    externalBorder: \"transparent\",\n    content: \"text-black\",\n  },\n} as const\n\nexport const BUTTON_VARIANT = keysOf(buttonVariantToClassNamesMapping)\nexport type ButtonVariant = typeof BUTTON_VARIANT[number]\n\nexport const buttonSizeToClassNamesMapping = {\n  sm: {\n    button: \"px-3 py-2\",\n    content: \"text-sm\",\n  },\n  md: {\n    button: \"px-4 py-2\",\n    content: \"text-md\",\n  },\n  lg: {\n    button: \"px-6 py-3\",\n    content: \"text-lg\",\n  },\n  xl: {\n    button: \"px-12 py-4\",\n    content: \"text-3xl\",\n  },\n}\n\nexport const BUTTON_SIZE = keysOf(buttonSizeToClassNamesMapping)\nexport type ButtonSize = typeof BUTTON_SIZE[number]\n\nexport interface ButtonBaseProps extends CommonProps {\n  // disabled or not\n  disabled?: boolean\n  // button size\n  size?: ButtonSize\n  // button variant\n  variant?: ButtonVariant\n  // full width button or not\n  block?: boolean\n  // circle shaped?\n  circle?: boolean\n  // no border radius\n  square?: boolean\n  // whether to just show an outline or not\n  // outline?: boolean;\n  /* Whether to show a spinner */\n  isLoading?: boolean\n  /* What HTML element to render */\n  asComponent?: \"button\" | \"a\"\n  /* Icon node to show on left side, if any */\n  iconLeft?: ReactNode\n  /* Icon node to show on right side, if any */\n  iconRight?: ReactNode\n  /* Classname to pass to root button element */\n  className?: string\n  /* The content to render inside of the button */\n  children?: ReactNode\n}\n\nexport interface ButtonProps extends ButtonBaseProps, ButtonHTMLAttributes<HTMLButtonElement> {}\n\nexport interface ButtonContentProps extends CommonProps {\n  /* variant of the button */\n  buttonVariant?: ButtonVariant\n  /* size of the button */\n  buttonSize?: ButtonSize\n  /* Whether to show a spinner */\n  isLoading?: boolean\n  /* Icon node to show on left side, if any */\n  iconLeft?: ReactNode\n  /* Icon node to show on right side, if any */\n  iconRight?: ReactNode\n  /**\n   * Object of props passed to the <span/> wrapping the content's text/children only (not icon)\n   */\n  textProps?: HTMLAttributes<HTMLSpanElement> &\n    CommonProps & {\n      ref?: Ref<HTMLSpanElement>\n      \"data-text\"?: string\n    }\n  /* The content to render inside of the button */\n  children?: ReactNode\n}\n","import * as React from \"react\"\nimport { buttonSizeToClassNamesMapping, buttonVariantToClassNamesMapping, ButtonProps } from \"./ButtonTypes\"\nimport ButtonContent from \"./ButtonContent\"\nimport { classNames, noop } from \"../../utils\"\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      disabled = false,\n      variant = \"standard\",\n      size = \"md\",\n      circle = false,\n      square = false,\n      block = false,\n      isLoading = false,\n      asComponent = \"button\",\n      onClick = noop,\n      iconLeft = null,\n      iconRight = null,\n      className = \"\",\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const variantClasses = buttonVariantToClassNamesMapping[variant]\n    const sizeClasses = buttonSizeToClassNamesMapping[size]\n\n    const handleOnClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      if (disabled) return\n      if (isLoading) return\n      onClick(e)\n    }\n\n    const borderRadiusClassname = circle ? \"rounded-full\" : square ? \"\" : \"rounded-xl\"\n\n    const buttonClassNames = classNames([\n      \"instant-noodles-ui-element instant-noodles-ui-button\",\n      \"relative\",\n      variant === \"ghost\" ? \"\" : \"border-2\",\n      block ? \"w-full\" : \"\",\n      asComponent === \"button\" ? \"\" : \"inline-block\",\n      borderRadiusClassname,\n      // interaction classes\n      variant === \"ghost\" ? \"\" : \"shadow-full\",\n      \"challenge-ui-animated-button\",\n      \"duration-200\",\n      // 'active:translate-y-px',\n      variant === \"ghost\" || disabled || isLoading ? \"\" : \"active:translate-y-px active:shadow-fourth\",\n      disabled ? \"cursor-not-allowed\" : isLoading ? \"cursor-wait\" : \"cursor-pointer\",\n      // size classes\n      sizeClasses.button,\n      // variants classes\n      variantClasses.button,\n      // customs\n      className,\n    ])\n    const buttonContentClassNames = classNames([\n      // position content\n      \"flex flex-row items-center\",\n      // wrap or not\n      \"whitespace-nowrap\",\n      // text styling\n      \"font-extrabold\",\n      // size classes\n      sizeClasses.content,\n      // variant classes\n      variantClasses.content,\n    ])\n\n    return React.createElement(\n      asComponent,\n      {\n        className: buttonClassNames,\n        onClick: handleOnClick,\n        disabled,\n        ref,\n        ...props,\n      },\n      <ButtonContent\n        buttonVariant={variant}\n        buttonSize={size}\n        isLoading={isLoading}\n        iconLeft={iconLeft}\n        iconRight={iconRight}\n        className={buttonContentClassNames}\n      >\n        <React.Fragment>{children}</React.Fragment>\n      </ButtonContent>\n    )\n  }\n)\n\nButton.displayName = \"Button\"\n\nexport default Button\n","import * as React from \"react\"\nimport { type CommonProps } from \"../../types\"\nimport { classNames } from \"../../utils\"\nimport { Spinner } from \"./Spinner\"\nimport { ButtonContentProps } from \"./ButtonTypes\"\n\nexport interface ButtonIconProps\n  extends CommonProps,\n    Pick<ButtonContentProps, \"buttonVariant\" | \"buttonSize\" | \"isLoading\"> {\n  icon: ButtonContentProps[\"iconLeft\"]\n}\nconst ButtonIcon = ({ buttonVariant, buttonSize, isLoading = false, icon, className = \"\" }: ButtonIconProps) => {\n  if (!icon && !isLoading) return null\n\n  return (\n    <span>\n      {isLoading ? (\n        <React.Fragment>\n          <Spinner\n            variant={[\"standard\", \"ghost\"].includes(buttonVariant as string) ? \"blue\" : \"plain\"}\n            size={buttonSize === \"xl\" ? \"md\" : \"sm\"}\n            className={classNames([buttonSize !== \"xl\" ? \"translate-y-0.5\" : \"translate-y-1\", className])}\n          />\n        </React.Fragment>\n      ) : (\n        icon\n      )}\n    </span>\n  )\n}\n\nconst ButtonContent = React.forwardRef<HTMLSpanElement, ButtonContentProps>(\n  (\n    {\n      children,\n      textProps,\n      buttonVariant,\n      buttonSize = \"md\",\n      isLoading = false,\n      iconLeft = null,\n      iconRight = null,\n      className = \"\",\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <span\n        className={classNames([\n          \"instant-noodles-ui-element instant-noodles-ui-button-content\", // custom class name for any global customization\n          \"flex flex-row items-center space-x-2 justify-center\",\n          className,\n        ])}\n        ref={ref}\n        {...props}\n      >\n        {/* only show loading icon on left side */}\n        <ButtonIcon\n          buttonVariant={buttonVariant}\n          buttonSize={buttonSize}\n          isLoading={isLoading}\n          icon={iconLeft}\n          className=\"mr-2\"\n        />\n        <span {...textProps}>{children}</span>\n        <ButtonIcon buttonVariant={buttonVariant} buttonSize={buttonSize} icon={iconRight} className=\"ml-2\" />\n      </span>\n    )\n  }\n)\n\nButtonContent.displayName = \"ButtonContent\"\n\nexport default ButtonContent\n","import * as React from \"react\"\nimport type { CommonProps } from \"../../types\"\nimport { classNames, keysOf, isDefined } from \"../../utils\"\n\nconst spinnerSizeToClassNamesMapping = {\n  sm: {\n    container: \"w-5 h-5 min-w-5 max-w-5 min-h-5 max-h-5\",\n    indicator: \"before:border-2 after:border-2\",\n  },\n  md: {\n    container: \"w-10 h-10 min-w-10 max-w-10 min-h-10 max-h-10\",\n    indicator: \"before:border-4 after:border-4\",\n  },\n  lg: {\n    container: \"w-16 h-16 min-w-16 max-w-16 min-h-16 max-h-16\",\n    indicator: \"before:border-8 after:border-8\",\n  },\n  xl: {\n    container: \"w-28 h-28 min-w-28 max-w-28 min-h-28 max-h-28\",\n    indicator: \"before:border-14 after:border-14\",\n  },\n}\nexport const SPINNER_SIZE = keysOf(spinnerSizeToClassNamesMapping)\nexport type SpinnerSize = typeof SPINNER_SIZE[number]\n\nconst spinnerVariantToClassNameMapping = {\n  red: \"before:border-t-red-300 after:border-t-red-300\",\n  blue: \"before:border-t-blue-300 after:border-t-blue-300\",\n  green: \"before:border-t-green-300 after:border-t-green-300\",\n  pink: \"before:border-t-pink-300 after:border-t-pink-300\",\n  yellow: \"before:border-t-yellow-300 after:border-t-yellow-300\",\n  plain: \"before:border-t-white after:border-t-white\",\n  dark: \"before:border-t-black after:border-t-black\",\n}\nexport const SPINNER_VARIANT = keysOf(spinnerVariantToClassNameMapping)\nexport type SpinnerVariant = typeof SPINNER_VARIANT[number]\n\ninterface SpinnerBaseProps extends CommonProps {\n  size?: SpinnerSize\n  variant?: SpinnerVariant\n  rotateColors?: boolean\n  className?: string\n  style?: React.CSSProperties\n}\n\nexport interface SpinnerProps extends SpinnerBaseProps, React.HTMLAttributes<HTMLDivElement> {}\n\nexport function Spinner({\n  size = \"sm\",\n  variant = \"plain\",\n  rotateColors = false,\n  className = \"\",\n  ...props\n}: SpinnerProps) {\n  const rotateColorRef = React.useRef<any | null>(null)\n  const [spinnerVariant, setSpinnerVariant] = React.useState<SpinnerVariant>(variant)\n\n  const sizeStyles = spinnerSizeToClassNamesMapping[size]\n  const variantStyles = spinnerVariantToClassNameMapping[spinnerVariant]\n\n  React.useEffect(() => {\n    if (rotateColors) {\n      rotateColorRef.current = setInterval(() => {\n        setSpinnerVariant((currentSpinnerVariant) => {\n          const idx = SPINNER_VARIANT.indexOf(currentSpinnerVariant)\n          const newIdx = idx === SPINNER_VARIANT.length - 1 ? 0 : idx + 1\n          return SPINNER_VARIANT[newIdx]\n        })\n      }, 1000)\n    }\n\n    return () => {\n      if (rotateColors && isDefined(rotateColorRef?.current)) {\n        clearInterval(rotateColorRef.current)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const wrapperClassNames = classNames([\n    \"instant-noodles-ui-element instant-noodles-ui-spinner\", // custom class name for any global customization\n    \"inline-flex\",\n    \"rounded-full shrink-0\",\n    \"relative ml-0\",\n    sizeStyles.container,\n    className,\n  ])\n\n  return (\n    <div className={wrapperClassNames} {...props}>\n      <div\n        className={classNames([\n          \"before:z-30\",\n          \"before:animate-spin\",\n          \"before:w-full after:w-full\",\n          \"before:h-full after:h-full\",\n          \"before:rounded-full after:rounded-full\",\n          \"before:absolute after:absolute\",\n          \"before:border-transparent after:border-neutral-300\",\n          sizeStyles.indicator,\n          variantStyles,\n          \"challenges-ui-spin-funky\",\n          \"after:border-t-neutral-300\",\n        ])}\n      />\n    </div>\n  )\n}\n","import * as React from \"react\"\nimport * as icons from \"../Icons\"\nimport type { CommonProps } from \"../../types\"\n\nexport interface IExpandableCommon extends CommonProps {\n  header: JSX.Element | string\n  noInsets?: boolean\n}\n\nexport interface IExpandable extends IExpandableCommon {\n  expanded?: boolean\n  setExpanded?: (expanded: boolean) => void\n}\n\nexport const Expandable: React.FC<IExpandable> = ({ header, expanded, setExpanded, children, noInsets }) => {\n  return (\n    <div className=\"expandable\">\n      <div\n        className={`expandable-header ${setExpanded ? `expanded-${expanded}` : \"\"}`}\n        onClick={() => setExpanded?.(!expanded)}\n        title={typeof header === \"string\" ? header : undefined}\n      >\n        {setExpanded && !!expanded && icons.downArrow()}\n        {setExpanded && !expanded && icons.rightArrow()}\n        {header}\n      </div>\n      {(!setExpanded || expanded) && (\n        <div className={\"expandable-body\" + (noInsets ? \" expandable-body-no-insets\" : \"\")}>{children}</div>\n      )}\n    </div>\n  )\n}\n\nexport interface IAutoExpandable extends IExpandableCommon {\n  initialExpanded?: boolean\n}\nexport const AutoExpandable: React.FC<IAutoExpandable> = ({ header, initialExpanded, noInsets, children }) => {\n  const [expanded, setExpanded] = React.useState(initialExpanded || initialExpanded === undefined)\n  return (\n    <Expandable header={header} expanded={expanded} setExpanded={setExpanded} noInsets={noInsets}>\n      <React.Fragment>{children}</React.Fragment>\n    </Expandable>\n  )\n}\n","import * as React from \"react\"\nimport type { TestCaseResultsStatus } from \"../../types\"\n\nexport const search = () => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      version=\"1.1\"\n      width=\"16\"\n      data-view-component=\"true\"\n      className=\"octicon subnav-search-icon\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z\"\n      ></path>\n    </svg>\n  )\n}\n\nexport const downArrow = () => {\n  return (\n    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" className=\"octicon color-fg-muted\">\n      <path\n        fillRule=\"evenodd\"\n        d=\"M12.78 6.22a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06 0L3.22 7.28a.75.75 0 011.06-1.06L8 9.94l3.72-3.72a.75.75 0 011.06 0z\"\n      ></path>\n    </svg>\n  )\n}\n\nexport const rightArrow = () => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      version=\"1.1\"\n      width=\"16\"\n      data-view-component=\"true\"\n      className=\"octicon color-fg-muted\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.22 3.22a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06L9.94 8 6.22 4.28a.75.75 0 010-1.06z\"\n      ></path>\n    </svg>\n  )\n}\n\nexport const warning = () => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      version=\"1.1\"\n      width=\"16\"\n      data-view-component=\"true\"\n      className=\"octicon color-text-warning\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z\"\n      ></path>\n    </svg>\n  )\n}\n\nexport const attachment = () => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      version=\"1.1\"\n      width=\"16\"\n      data-view-component=\"true\"\n      className=\"octicon color-fg-muted\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M3.5 1.75a.25.25 0 01.25-.25h3a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h2.086a.25.25 0 01.177.073l2.914 2.914a.25.25 0 01.073.177v8.586a.25.25 0 01-.25.25h-.5a.75.75 0 000 1.5h.5A1.75 1.75 0 0014 13.25V4.664c0-.464-.184-.909-.513-1.237L10.573.513A1.75 1.75 0 009.336 0H3.75A1.75 1.75 0 002 1.75v11.5c0 .649.353 1.214.874 1.515a.75.75 0 10.752-1.298.25.25 0 01-.126-.217V1.75zM8.75 3a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5zM6 5.25a.75.75 0 01.75-.75h.5a.75.75 0 010 1.5h-.5A.75.75 0 016 5.25zm2 1.5A.75.75 0 018.75 6h.5a.75.75 0 010 1.5h-.5A.75.75 0 018 6.75zm-1.25.75a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5zM8 9.75A.75.75 0 018.75 9h.5a.75.75 0 010 1.5h-.5A.75.75 0 018 9.75zm-.75.75a1.75 1.75 0 00-1.75 1.75v3c0 .414.336.75.75.75h2.5a.75.75 0 00.75-.75v-3a1.75 1.75 0 00-1.75-1.75h-.5zM7 12.25a.25.25 0 01.25-.25h.5a.25.25 0 01.25.25v2.25H7v-2.25z\"\n      ></path>\n    </svg>\n  )\n}\n\nexport const cross = () => {\n  return (\n    <svg\n      className=\"octicon color-text-danger\"\n      viewBox=\"0 0 16 16\"\n      version=\"1.1\"\n      width=\"16\"\n      height=\"16\"\n      aria-hidden=\"true\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z\"\n      ></path>\n    </svg>\n  )\n}\n\nexport const check = () => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      version=\"1.1\"\n      width=\"16\"\n      data-view-component=\"true\"\n      className=\"octicon color-icon-success\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n      ></path>\n    </svg>\n  )\n}\n\nexport const clock = () => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      version=\"1.1\"\n      width=\"16\"\n      data-view-component=\"true\"\n      className=\"octicon color-text-danger\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.75.75A.75.75 0 016.5 0h3a.75.75 0 010 1.5h-.75v1l-.001.041a6.718 6.718 0 013.464 1.435l.007-.006.75-.75a.75.75 0 111.06 1.06l-.75.75-.006.007a6.75 6.75 0 11-10.548 0L2.72 5.03l-.75-.75a.75.75 0 011.06-1.06l.75.75.007.006A6.718 6.718 0 017.25 2.541a.756.756 0 010-.041v-1H6.5a.75.75 0 01-.75-.75zM8 14.5A5.25 5.25 0 108 4a5.25 5.25 0 000 10.5zm.389-6.7l1.33-1.33a.75.75 0 111.061 1.06L9.45 8.861A1.502 1.502 0 018 10.75a1.5 1.5 0 11.389-2.95z\"\n      ></path>\n    </svg>\n  )\n}\n\nexport const blank = () => {\n  return <svg className=\"octicon\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"></svg>\n}\n\nexport const externalLink = () => {\n  return (\n    <svg className=\"octicon\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n      <path\n        fillRule=\"evenodd\"\n        d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\n      ></path>\n    </svg>\n  )\n}\n\nexport const calendar = () => {\n  return (\n    <svg className=\"octicon\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n      <path\n        fillRule=\"evenodd\"\n        d=\"M4.75 0a.75.75 0 01.75.75V2h5V.75a.75.75 0 011.5 0V2h1.25c.966 0 1.75.784 1.75 1.75v10.5A1.75 1.75 0 0113.25 16H2.75A1.75 1.75 0 011 14.25V3.75C1 2.784 1.784 2 2.75 2H4V.75A.75.75 0 014.75 0zm0 3.5h8.5a.25.25 0 01.25.25V6h-11V3.75a.25.25 0 01.25-.25h2zm-2.25 4v6.75c0 .138.112.25.25.25h10.5a.25.25 0 00.25-.25V7.5h-11z\"\n      ></path>\n    </svg>\n  )\n}\n\nexport const person = () => {\n  return (\n    <svg className=\"octicon\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n      <path\n        fillRule=\"evenodd\"\n        d=\"M10.5 5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm.061 3.073a4 4 0 10-5.123 0 6.004 6.004 0 00-3.431 5.142.75.75 0 001.498.07 4.5 4.5 0 018.99 0 .75.75 0 101.498-.07 6.005 6.005 0 00-3.432-5.142z\"\n      ></path>\n    </svg>\n  )\n}\n\nexport const commit = () => {\n  return (\n    <svg className=\"octicon\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n      <path\n        fillRule=\"evenodd\"\n        d=\"M10.5 7.75a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm1.43.75a4.002 4.002 0 01-7.86 0H.75a.75.75 0 110-1.5h3.32a4.001 4.001 0 017.86 0h3.32a.75.75 0 110 1.5h-3.32z\"\n      ></path>\n    </svg>\n  )\n}\n\nconst getIcon = (status: TestCaseResultsStatus) => {\n  switch (status) {\n    case \"failed\":\n      return cross()\n    case \"passed\":\n      return check()\n    case \"timedOut\":\n      return warning()\n    case \"skipped\":\n      return blank()\n  }\n}\n\nexport function statusIcon(status: TestCaseResultsStatus): JSX.Element {\n  return (\n    <React.Fragment>\n      <>{getIcon(status)}</>\n    </React.Fragment>\n  )\n}\n","import type { TestSuiteMapping, ReportResults } from \"../../types\"\nimport type { MicrowaveConfig } from \"react-microwave\"\n\nimport * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport { ReportDisplay } from \"../ReportDisplay\"\nimport { useExecuteTestSuites, UseExecuteTestSuitesContext } from \"../../hooks/use-execute-test-suites\"\nimport { isDefined } from \"../../utils\"\nimport * as constants from \"../../constants\"\n\nexport interface InstantNoodlesProps {\n  RootComponent?: React.ComponentType<any>\n  tests?: TestSuiteMapping\n  config?: Partial<MicrowaveConfig>\n}\n\nexport interface UseInstantNoodlesContext extends UseExecuteTestSuitesContext {\n  container: React.RefObject<HTMLElement>\n  initialized: boolean\n  reportExists: boolean\n}\n\nexport function useInstantNoodles({ tests, RootComponent, config }: InstantNoodlesProps): UseInstantNoodlesContext {\n  const container = React.useRef<HTMLElement | null>(null)\n  const [initialized, setInitialized] = React.useState(false)\n  const { report, testsAreRunning } = useExecuteTestSuites({\n    testSuites: tests,\n    RootComponent,\n    config,\n  })\n\n  const reportExists = isDefined(report?.stats)\n\n  React.useEffect(() => {\n    if (!container.current && !initialized) {\n      // const existingEl = window.document.getElementById(\"microwave-report-div-root\")\n      const existingEl = window.document.getElementById(constants.MICROWAVE_LIVE_REPORT_ROOT_DIV_ID)\n      if (existingEl) {\n        container.current = existingEl\n      } else {\n        const el = window.document.createElement(\"div\")\n        // el.setAttribute(\"id\", \"microwave-report-div-root\")\n        el.setAttribute(\"id\", constants.MICROWAVE_LIVE_REPORT_ROOT_DIV_ID)\n        container.current = el\n        window.document.body.appendChild(el)\n      }\n\n      setInitialized(true)\n    }\n  }, [initialized])\n\n  return { report, testsAreRunning, container, initialized, reportExists }\n}\n\nexport function InstantNoodles(props: InstantNoodlesProps) {\n  const { report, testsAreRunning, container, initialized, reportExists } = useInstantNoodles({\n    tests: props.tests,\n    RootComponent: props.RootComponent,\n    config: props.config,\n  })\n\n  return (\n    <React.Fragment>\n      {container.current\n        ? ReactDOM.createPortal(\n            <ReportDisplay\n              report={report as ReportResults}\n              testsAreRunning={testsAreRunning}\n              initialized={initialized}\n            />,\n            container.current!\n          )\n        : null}\n    </React.Fragment>\n  )\n}\n","import * as React from \"react\"\nimport type { HTMLReport, ReportFilter, ReportStats, ExpandedTests } from \"../../types\"\nimport * as icons from \"../Icons\"\nimport { SuiteResults } from \"../Suite\"\nimport { ReportHeader } from \"./ReportHeader\"\nimport { ToggleReportButton } from \"./ToggleReportButton\"\nimport { useOnClickOutside } from \"../../hooks/use-on-click-outside\"\n\nexport interface IReportContent {\n  stats?: ReportStats\n  report?: HTMLReport\n  isShowing?: boolean\n  setIsShowing: (b: boolean) => void\n  displayFilter: ReportFilter\n  setDisplayFilter: (filter: ReportFilter) => void\n  expandedTests: ExpandedTests\n  setExpandedTests: (expandedTests: ExpandedTests) => void\n  testsAreRunning?: boolean\n}\nexport function ReportContent(props: IReportContent) {\n  const reportWrapperRef = React.useRef<HTMLDivElement>(null)\n\n  const handleOnClickOutside = () => {\n    // TODO: only close report on outside click if configuration option is set to true\n    props.setIsShowing(false)\n  }\n\n  useOnClickOutside(reportWrapperRef, handleOnClickOutside)\n\n  if (!props.isShowing) {\n    return (\n      <ToggleReportButton\n        numPassed={props.report?.stats?.passed ?? 0}\n        numTotal={props.report?.stats?.total ?? 0}\n        setIsShowing={props.setIsShowing}\n      />\n    )\n  }\n\n  return (\n    <div className=\"htmlreport\" ref={reportWrapperRef}>\n      <div className=\"report-close-icon\" role=\"button\" onClick={() => props.setIsShowing(!props.isShowing)}>\n        {icons.cross()}\n      </div>\n      <main>\n        <ReportHeader\n          stats={props.stats}\n          displayFilter={props.displayFilter}\n          setDisplayFilter={props.setDisplayFilter}\n        />\n        <br />\n        <br />\n        <SuiteResults\n          displayFilter={props.displayFilter}\n          report={props.report}\n          expandedTests={props.expandedTests}\n          setExpandedTests={props.setExpandedTests}\n          testsAreRunning={props.testsAreRunning}\n        />\n      </main>\n    </div>\n  )\n}\n","import type { HTMLReport, ITestSuiteSummary, ITestCaseSummary, ReportFilter, ExpandedTests } from \"../../types\"\nimport * as React from \"react\"\nimport { Expandable } from \"../Expandable/Expandable\"\nimport * as icons from \"../Icons\"\nimport { msToString } from \"../../utils\"\nimport * as helpers from \"./helpers\"\n\nexport interface ITestSuite {\n  report: HTMLReport\n  suite: ITestSuiteSummary\n  isTestExpanded: (testId: string) => boolean\n  setExpandedTests: (fileId: string, expanded: boolean) => void\n  displayFilter?: ReportFilter\n}\nexport const TestSuite = ({ suite, isTestExpanded, setExpandedTests, displayFilter }: ITestSuite) => {\n  const [expandedSuiteTests, setExpandedSuiteTests] = React.useState<ExpandedTests>(new Map())\n\n  const filteredSuiteTests = React.useMemo(() => {\n    if (!displayFilter || displayFilter === \"all\") return suite.tests\n    return suite.tests.filter((test) => test.status === displayFilter)\n    // TODO: Figure out if we want to update the deps for this section\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [displayFilter])\n\n  return (\n    <Expandable\n      expanded={isTestExpanded(suite.suiteName)}\n      noInsets={true}\n      setExpanded={(expanded) => setExpandedTests(suite.suiteName, expanded)}\n      header={\n        <span>\n          <span style={{ float: \"right\", marginLeft: 5 }}>{msToString(suite.stats.duration)}</span>\n          {suite.suiteName}\n        </span>\n      }\n    >\n      {filteredSuiteTests.length === 0 ? (\n        <div className={\"test-case\"}>\n          <span className=\"test-case-desc\">No tests match that filter for this suite</span>\n        </div>\n      ) : null}\n      {filteredSuiteTests.map((test: ITestCaseSummary) => (\n        <React.Fragment key={`test-${test.order}`}>\n          <div\n            className={\"test-case test-case-outcome-\" + test.status}\n            role=\"button\"\n            onClick={() => {\n              const isExpanded = expandedSuiteTests.get(test.order)\n              const newExpanded = new Map(expandedSuiteTests)\n              newExpanded.set(test.order, !isExpanded)\n              setExpandedSuiteTests(newExpanded)\n            }}\n          >\n            <span style={{ float: \"right\" }}>{msToString(test.duration)}</span>\n            {icons.statusIcon(test.status)}\n            <span className=\"test-case-desc\">— {test.description}</span>\n          </div>\n          {expandedSuiteTests.get(test.order) ? (\n            <>\n              {test.errors?.length ? (\n                <div className=\"error-message-box-wrapper\">\n                  {test.errors.map((e, i) => {\n                    const htmlToRender = helpers.createHtmlFromError(e)\n                    return (\n                      <div\n                        key={`error-${i}`}\n                        className=\"error-message-box\"\n                        dangerouslySetInnerHTML={{ __html: htmlToRender }}\n                        // onClick={() => console.log({ e })}\n                      />\n                    )\n                  })}\n                </div>\n              ) : (\n                <div className=\"success-message-box-wrapper\">\n                  <div>{test.description}</div>\n                  <div>Status: {helpers.htmlFormatStatus(test.status)}</div>\n                </div>\n              )}\n            </>\n          ) : null}\n        </React.Fragment>\n      ))}\n    </Expandable>\n  )\n}\n","import * as React from \"react\"\nimport type { TestCaseResultsStatus } from \"../../types\"\n\nexport function getValidHtmlStringForErrorMessage(e: string) {\n  let lastIndex = -1\n\n  lastIndex = e.indexOf(\"(Actual)\")\n  if (lastIndex > -1) {\n    return e.slice(0, lastIndex + 8)\n  }\n\n  lastIndex = e.indexOf(\"(ok)\")\n  if (lastIndex > -1) {\n    return e.slice(0, lastIndex + 4)\n  }\n\n  lastIndex = e.indexOf(\"at assert\")\n  if (lastIndex > -1) {\n    return e.slice(0, lastIndex + 9)\n  }\n\n  return e\n}\n\nexport const htmlFormatStatus = (status: TestCaseResultsStatus) => {\n  if (status === \"passed\")\n    return <span style={{ fontWeight: \"bold\", color: \"var(--color-scale-green-4)\" }}>{status}</span>\n  if (status === \"failed\")\n    return <span style={{ fontWeight: \"bold\", color: \"var(--color-scale-red-5)\" }}>{status}</span>\n  if (status === \"skipped\")\n    return <span style={{ fontWeight: \"bold\", color: \"var(--color-scale-gray-4)\" }}>{status}</span>\n  return status\n}\n\nexport const stripExtraneousValuesFromErrorString = (e: string) => e.replace(\"[90m\", \"\").replace(\"[39m\", \"\")\n\nexport const createHtmlFromError = (e: string) => {\n  const eLines = stripExtraneousValuesFromErrorString(e).split(\"\\n\")\n  const formattedELines = eLines\n    .filter((l) => Boolean(l?.trim()) && Boolean(l.trim()))\n    // .map((l) => `<p style=\"display: flex; flex-wrap: wrap; align-items: center;\">${l}</p>`)\n    .map((l) => `<p style=\"display: flex\">${l}</p>`)\n    .join(\"\")\n\n  const htmlToRender = getValidHtmlStringForErrorMessage(formattedELines)\n  return htmlToRender\n}\n","import * as React from \"react\"\nimport type { HTMLReport, ITestSuiteSummary, ReportFilter, ExpandedTests } from \"../../types\"\nimport { Loader } from \"../Loader/Loader\"\nimport { TestSuite } from \"./Suite\"\n\ninterface ISuiteResults {\n  report?: HTMLReport\n  expandedTests: ExpandedTests\n  setExpandedTests: (value: ExpandedTests) => void\n  defaultExpanded?: boolean\n  displayFilter?: ReportFilter\n  testsAreRunning?: boolean\n}\nexport const SuiteResults = ({\n  report,\n  expandedTests,\n  setExpandedTests,\n  displayFilter,\n  defaultExpanded = true,\n  testsAreRunning,\n}: ISuiteResults) => {\n  const filteredSuites = React.useMemo(() => {\n    const result: { suite: ITestSuiteSummary; defaultExpanded: boolean }[] = []\n    let visibleTests = 0\n    for (const suite of report?.suites || []) {\n      const tests = suite.tests\n      visibleTests += tests.length\n      if (tests.length) result.push({ suite, defaultExpanded: visibleTests < 200 })\n    }\n    return result\n  }, [report])\n\n  if (testsAreRunning) {\n    return (\n      <div className=\"suites\">\n        <Loader />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"suites\">\n      {report?.suites\n        ? filteredSuites.map(({ suite }) => {\n            return (\n              <TestSuite\n                key={`suite-${suite.suiteName}`}\n                displayFilter={displayFilter}\n                report={report}\n                suite={suite}\n                isTestExpanded={(fileId) => {\n                  const value = expandedTests.get(fileId)\n                  if (value === undefined) return defaultExpanded\n                  return !!value\n                }}\n                setExpandedTests={(fileId, expanded) => {\n                  const newExpanded = new Map(expandedTests)\n                  newExpanded.set(fileId, expanded)\n                  setExpandedTests(newExpanded)\n                }}\n              />\n            )\n          })\n        : null}\n    </div>\n  )\n}\n","import * as React from \"react\"\n\nexport function Loader(props: any) {\n  return (\n    <React.Fragment>\n      <div id=\"loading-overlay\" className=\"regular-loading\" {...props}>\n        <div className=\"loader\">\n          <span className=\"bar\"></span>\n          <span className=\"bar\"></span>\n          <span className=\"bar\"></span>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n","import * as React from \"react\"\nimport type { ReportFilter, ReportStats } from \"../../types\"\nimport { Button } from \"../Button\"\nimport * as icons from \"../Icons\"\n\nconst navbarFilterItems: { label: string; value: ReportFilter; stateAttr: string; icon?: any }[] = [\n  { label: \"All\", value: \"all\", stateAttr: \"total\" },\n  { label: \"Passed\", value: \"passed\", stateAttr: \"passed\", icon: icons.statusIcon(\"passed\") },\n  { label: \"Failed\", value: \"failed\", stateAttr: \"failed\", icon: icons.statusIcon(\"failed\") },\n  { label: \"Skipped\", value: \"skipped\", stateAttr: \"skipped\" },\n]\n\nexport interface IReportHeader {\n  stats?: ReportStats\n  displayFilter: ReportFilter\n  setDisplayFilter: (filter: ReportFilter) => void\n}\nexport function ReportHeader({ stats, setDisplayFilter, displayFilter }: IReportHeader) {\n  return (\n    <nav className=\"report-navbar\">\n      {navbarFilterItems.map((item) => (\n        <React.Fragment key={item.value}>\n          <Button\n            className={`nav-item ${item.value === displayFilter ? \"active\" : \"\"}`}\n            onClick={() => setDisplayFilter(item.value)}\n          >\n            {item.icon ?? null} {item.label}{\" \"}\n            <span className=\"counter\">{stats?.[item.stateAttr as keyof typeof stats] ?? 0}</span>\n          </Button>\n        </React.Fragment>\n      ))}\n    </nav>\n  )\n}\n","import * as React from \"react\"\n\nexport interface IToggleReportButtonProps {\n  numPassed?: number\n  numTotal?: number\n  setIsShowing?: (isShowing: boolean) => void\n  style?: React.CSSProperties\n}\n\nexport function ToggleReportButton({ setIsShowing, numPassed, numTotal, ...props }: IToggleReportButtonProps) {\n  const borderColor = numPassed === numTotal ? \"green\" : \"red\"\n\n  return (\n    <button\n      className=\"react-live-test-report-toggle\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: 45,\n        width: 45,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        background: \"white\",\n        border: `solid 1px ${borderColor}`,\n        borderRadius: \"50%\",\n        position: \"absolute\",\n        right: 5,\n        top: 5,\n        cursor: \"pointer\",\n        fontSize: 12,\n        // letterSpacing: \"4px\",\n        fontWeight: \"bold\",\n      }}\n      onClick={() => setIsShowing?.(true)}\n      {...props}\n    >\n      <span style={{ display: \"flex\", justifyContent: \"center\", fontWeight: \"bold\" }}>\n        {numPassed ?? 0}/{numTotal ?? 0}\n      </span>\n    </button>\n  )\n}\n","import { type RefObject, useEffect, useRef } from \"react\"\nimport { useIsomorphicLayoutEffect } from \"./use-isomorphic-layout-effect\"\n\nexport function useEventListener<K extends keyof WindowEventMap>(\n  eventName: K,\n  handler: (event: WindowEventMap[K]) => void\n): void\nexport function useEventListener<K extends keyof HTMLElementEventMap, T extends HTMLElement = HTMLDivElement>(\n  eventName: K,\n  handler: (event: HTMLElementEventMap[K]) => void,\n  element: RefObject<T>\n): void\n\nexport function useEventListener<\n  KW extends keyof WindowEventMap,\n  KH extends keyof HTMLElementEventMap,\n  T extends HTMLElement | void = void\n>(\n  eventName: KW | KH,\n  handler: (event: WindowEventMap[KW] | HTMLElementEventMap[KH] | Event) => void,\n  element?: RefObject<T>\n) {\n  const savedHandler = useRef(handler)\n\n  useIsomorphicLayoutEffect(() => {\n    savedHandler.current = handler\n  }, [handler])\n\n  useEffect(() => {\n    const targetElement: T | Window = element?.current || window\n    if (!(targetElement && targetElement.addEventListener)) return\n\n    const eventListener: typeof handler = (event) => savedHandler.current(event)\n    targetElement.addEventListener(eventName, eventListener)\n\n    return () => {\n      targetElement.removeEventListener(eventName, eventListener)\n    }\n  }, [eventName, element])\n}\n","import { useEffect, useLayoutEffect } from \"react\"\n\nexport const useIsomorphicLayoutEffect = typeof window !== \"undefined\" ? useLayoutEffect : useEffect\n","import { type RefObject } from \"react\"\nimport { useEventListener } from \"./use-event-listener\"\n\ntype Handler = (event: MouseEvent) => void\n\nexport function useOnClickOutside<T extends HTMLElement = HTMLElement>(\n  ref: RefObject<T>,\n  handler: Handler,\n  mouseEvent: \"mousedown\" | \"mouseup\" = \"mousedown\"\n): void {\n  useEventListener(mouseEvent, (event) => {\n    const el = ref?.current\n\n    // Do nothing if clicking ref's element or descendent elements\n    if (!el || el.contains(event.target as Node)) {\n      return\n    }\n\n    handler(event)\n  })\n}\n","import * as React from \"react\"\nimport type { HTMLReport, ReportFilter, ReportStats, ExpandedTests } from \"../../types\"\nimport { ReportFrame } from \"../ReportFrame\"\nimport { useLocalStorage } from \"../../hooks/use-local-storage\"\nimport { ReportContent } from \"./ReportContent\"\n\nexport interface IReportDisplay {\n  stats?: ReportStats\n  report?: HTMLReport\n  isShowing?: boolean\n  testsAreRunning?: boolean\n  initialized?: boolean\n}\n\nexport function useReportDisplay() {\n  const frameRef = React.useRef<HTMLIFrameElement | null>(null)\n  const [isShowing, setIsShowing] = useLocalStorage(\"microwave-report-is-showing\", false)\n  const [displayFilter, setDisplayFilter] = React.useState<ReportFilter>(\"all\")\n  const [expandedTests, setExpandedTests] = React.useState<ExpandedTests>(new Map())\n  // const [hasMounted, setHasMounted] = React.useState(false)\n\n  return {\n    frameRef,\n    isShowing,\n    setIsShowing,\n    displayFilter,\n    setDisplayFilter,\n    expandedTests,\n    setExpandedTests,\n    // hasMounted,\n    // setHasMounted,\n  }\n}\n\nexport function ReportDisplay(props: IReportDisplay) {\n  const {\n    frameRef,\n    isShowing,\n    setIsShowing,\n    displayFilter,\n    setDisplayFilter,\n    expandedTests,\n    setExpandedTests,\n    // handleOnMount,\n  } = useReportDisplay()\n\n  return (\n    <ReportFrame\n      frameRef={frameRef}\n      initialized={props.initialized ? 1 : 0}\n      passing={props.report?.stats?.passed ?? 0}\n      total={props.report?.stats?.total ?? 0}\n      isShowing={isShowing}\n      setIsShowing={setIsShowing}\n      // onUpdate={() => handleOnMount()}\n      // onMount={() => handleOnMount()}\n    >\n      <ReportContent\n        report={props.report}\n        stats={props.report?.stats}\n        displayFilter={displayFilter}\n        setDisplayFilter={setDisplayFilter}\n        expandedTests={expandedTests}\n        setExpandedTests={setExpandedTests}\n        setIsShowing={setIsShowing}\n        isShowing={isShowing}\n        testsAreRunning={props.testsAreRunning}\n      />\n    </ReportFrame>\n  )\n}\n","import * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport { renderToStaticMarkup } from \"react-dom/server\"\nimport { isDefined } from \"../../utils\"\nimport { Content } from \"./Content\"\nimport { createHead } from \"./createHead\"\n\nimport { FrameContextProvider } from \"./Context\"\n\nexport type ReportFrameProps = {\n  children: React.ReactChild\n  className?: string\n  mountTarget?: string\n  onMount?: () => void\n  onUpdate?: () => void\n  isShowing?: boolean\n  initialized?: number\n  setIsShowing?: (isShowing: boolean) => void\n  passing?: number\n  total?: number\n  frameRef: React.MutableRefObject<HTMLIFrameElement | null>\n}\nexport function ReportFrame(props: ReportFrameProps) {\n  const { frameRef } = props\n\n  const setNodeRef = (node: HTMLIFrameElement) => {\n    if (isDefined(node) && !isDefined(frameRef.current)) {\n      frameRef.current = node\n\n      props.onMount?.()\n    }\n  }\n\n  const getDoc = () => {\n    if (isDefined(frameRef.current)) {\n      return frameRef.current.contentDocument\n    }\n    return null\n  }\n\n  const createFrameContents = () => {\n    if (!isDefined(frameRef.current)) return null\n\n    const doc = getDoc()\n\n    if (!isDefined(doc)) return null\n\n    const win = doc.defaultView\n\n    const contents = (\n      <Content onUpdate={props.onUpdate} onMount={props.onMount}>\n        <FrameContextProvider value={{ document: doc, window: win ?? undefined, initialized: props.initialized ?? 0 }}>\n          {props?.children ?? null}\n        </FrameContextProvider>\n      </Content>\n    )\n\n    return contents\n  }\n\n  const getMountTarget = () => {\n    const doc = getDoc()\n    let target: HTMLElement | null | undefined\n\n    if (isDefined(props?.mountTarget)) {\n      target = doc?.querySelector(props?.mountTarget)\n    }\n\n    if (isDefined(doc) && !isDefined(target)) {\n      target = doc?.body?.children?.[0] as HTMLElement\n    }\n\n    if (isDefined(frameRef?.current) && !isDefined(target)) {\n      const frameDoc = frameRef?.current?.contentDocument\n      const body = frameRef?.current?.contentDocument?.body\n      if (!body?.children?.length) {\n        target = frameDoc?.createElement(\"main\")\n        if (target) {\n          target?.setAttribute(\"id\", \"instant-noodles-react-live-test-frame-root\")\n          body?.appendChild(target)\n        }\n      }\n      target = frameRef?.current?.contentDocument?.body?.children?.[0] as HTMLElement\n    }\n\n    return target\n  }\n\n  const createIFrameProps = (contents: JSX.Element | null, target?: HTMLElement | null) => {\n    const iframeprops = {\n      srcDoc: createDefaultSrcWithBody(createHead()),\n      className: \"sandbox-iframe-element\" + isDefined(contents) ? \"\" : \"\" + isDefined(target) ? \"\" : \"\",\n    }\n\n    return iframeprops\n  }\n\n  const d = getDoc()\n  const contents = createFrameContents()\n  const contentsMountTarget = getMountTarget()\n  const frameProps = createIFrameProps(contents, contentsMountTarget)\n  const iframeStyle = getIframeStyle(props.isShowing)\n\n  return (\n    <React.Fragment>\n      <iframe\n        {...frameProps}\n        ref={setNodeRef}\n        // used to be ts-ignoring this\n        style={iframeStyle}\n      >\n        {isDefined(d) && isDefined(contentsMountTarget) ? ReactDOM.createPortal(contents, contentsMountTarget) : null}\n      </iframe>\n    </React.Fragment>\n  )\n}\n\ntype IFrameStyles = React.DetailedHTMLProps<React.IframeHTMLAttributes<HTMLIFrameElement>, HTMLIFrameElement>\n\nconst getIframeStyle = (isShowing = false): IFrameStyles => {\n  const defaultStyles = {\n    right: 0,\n    top: 0,\n    bottom: 0,\n    height: \"100%\",\n    width: \"100%\",\n    position: \"fixed\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    zIndex: 1000000000000,\n    border: \"none\",\n  }\n\n  const styles = isShowing\n    ? {\n        ...defaultStyles,\n        height: \"100vh\",\n        width: \"800px\",\n        maxWidth: \"100vw\",\n        transform: \"translateX(0)\",\n        overflowY: \"scroll\",\n      }\n    : {\n        ...defaultStyles,\n        height: 50,\n        width: 50,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }\n\n  return styles as IFrameStyles\n}\n\nfunction StaticButton() {\n  return (\n    <button\n      className=\"react-live-test-report-toggle\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: 45,\n        width: 45,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        background: \"white\",\n        border: `solid 1px ${\"green\"}`,\n        borderRadius: \"50%\",\n        position: \"absolute\",\n        right: 5,\n        top: 5,\n        cursor: \"pointer\",\n        fontSize: 10,\n        letterSpacing: \"0.1px\",\n        fontWeight: \"bold\",\n      }}\n    >\n      <span id=\"react-live-test-small-font\" style={{ display: \"flex\", justifyContent: \"center\", fontWeight: \"bold\" }}>\n        save to run\n      </span>\n    </button>\n  )\n}\n\nconst createDefaultSrcWithBody = (\n  head: string = \"<head></head>\",\n  body = `<main id=\"instant-noodles-react-live-test-frame-root\" style=\"overflow-y: scroll\">${renderToStaticMarkup(\n    StaticButton()\n  )}</main>`\n) => `<!DOCTYPE html><html>${head}<body>${body}</body></html>`\n","import * as React from \"react\"\nimport type { AnyFunction } from \"../../types\"\nimport { noop } from \"../../utils\"\n\nexport interface ContentProps {\n  children: React.ReactChild\n  onMount?: AnyFunction\n  onUpdate?: AnyFunction\n}\nexport function Content({ children, onMount = noop, onUpdate = noop }: ContentProps) {\n  React.useEffect(() => {\n    onMount()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  React.useEffect(() => {\n    onUpdate()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [children])\n\n  return <React.Fragment>{React.Children.only(children)}</React.Fragment>\n}\n","function rootStyles() {\n  return `\n<style>\n\n:root {\n  --color-canvas-subtle: #161b22;\n  --color-border-default: #30363d;\n\n  --color-fg-default: #c9d1d9;\n  --color-fg-muted: #8b949e;\n  --color-fg-subtle: #484f58;  \n\n  --color-checks-step-header-open-bg: #161b22;\n  --color-checks-step-error-text: #f85149;\n  --color-checks-step-warning-text: #d29922;  \n\n  --color-neutral-emphasis-plus: #6e7681;\n  --color-neutral-emphasis: #6e7681;\n  --color-neutral-muted: rgba(110,118,129,0.4);\n  --color-neutral-subtle: rgba(110,118,129,0.1);\n\n  --color-accent-fg: #58a6ff;\n  --color-accent-emphasis: #1f6feb;\n  --color-accent-muted: rgba(56,139,253,0.4);\n  --color-accent-subtle: rgba(56,139,253,0.15);\n\n  --color-success-fg: #3fb950;\n  --color-success-emphasis: #238636;\n  --color-success-muted: rgba(46,160,67,0.4);\n  --color-success-subtle: rgba(46,160,67,0.15);\n\n  --color-attention-fg: #d29922;\n  --color-attention-emphasis: #9e6a03;\n  --color-attention-muted: rgba(187,128,9,0.4);\n  --color-attention-subtle: rgba(187,128,9,0.15);\n\n  --color-severe-fg: #db6d28;\n  --color-severe-emphasis: #bd561d;\n  --color-severe-muted: rgba(219,109,40,0.4);\n  --color-severe-subtle: rgba(219,109,40,0.15);\n\n  --color-danger-fg: #f85149;\n  --color-danger-emphasis: #da3633;\n  --color-danger-muted: rgba(248,81,73,0.4);\n  --color-danger-subtle: rgba(248,81,73,0.15);\n\n  --color-done-fg: #a371f7;\n  --color-done-emphasis: #8957e5;\n  --color-done-muted: rgba(163,113,247,0.4);\n  --color-done-subtle: rgba(163,113,247,0.15);  \n\n  --color-scale-black: #010409;\n  --color-scale-white: #f0f6fc;\n\n  --color-scale-gray-0: #f0f6fc;\n  --color-scale-gray-1: #c9d1d9;\n  --color-scale-gray-2: #b1bac4;\n  --color-scale-gray-3: #8b949e;\n  --color-scale-gray-4: #6e7681;\n  --color-scale-gray-5: #484f58;\n  --color-scale-gray-6: #30363d;\n  --color-scale-gray-7: #21262d;\n  --color-scale-gray-8: #161b22;\n  --color-scale-gray-9: #0d1117;  \n}\n</style>  \n  `\n}\n\nfunction reportGlobalStyles() {\n  return `\n<style>\n* {\n  box-sizing: border-box;\n  min-width: 0;\n  min-height: 0;\n  font-family: \"SF Mono\", Monaco, Consolas, \"Droid Sans Mono\", Inconsolata, \"Courier New\", monospace;\n  font-size: 13px;\n}\n\nhtml, body {\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  margin: 0;\n  overscroll-behavior-x: none;\n}\n\nbody {\n  overflow: auto;\n  max-width: 1024px;\n  margin: 0 auto;\n  width: 100%;\n}\n\n#react-live-test-small-font {\n  font-size: 10px;\n}\n\nsvg {\n  fill: currentColor;\n}\n\n.mr-1 { margin-right: 4px; }\n.mr-2 { margin-right: 8px; }\n.mr-3 { margin-right: 16px; }\n.mr-4 { margin-right: 24px; }\n.mr-5 { margin-right: 32px; }\n\n.ml-1 { margin-left: 4px; }\n.ml-2 { margin-left: 8px; }\n.ml-3 { margin-left: 16px; }\n.ml-4 { margin-left: 24px; }\n.ml-5 { margin-left: 32px; }\n\n.p-1 { padding: 4px; }\n.p-2 { padding: 8px; }\n.p-3 { padding: 16px; }\n.p-4 { padding: 24px; }\n.p-5 { padding: 32px; }\n\n.px-1 { padding: 0 4px; }\n.px-2 { padding: 0 8px; }\n.px-3 { padding: 0 16px; }\n.px-4 { padding: 0 24px; }\n.px-5 { padding: 0 32px; }\n\n.py-1 { padding: 4px 0; }\n.py-2 { padding: 8px 0; }\n.py-3 { padding: 16px 0; }\n.py-4 { padding: 24px 0; }\n.py-5 { padding: 32px 0; }\n\n.float-left {\n  float: left !important;\n}\n\narticle, aside, details, figcaption, figure, footer, header, main, menu, nav, section {\n  display: block;\n}\n\nhtml,\nbody,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nspan,\np,\ndiv {\n  margin: 0;\n  padding: 0;\n}  \n\n</style>\n  `\n}\n\nfunction iconStyles() {\n  return `\n<style>\n.color-icon-success {\n  color: var(--color-success-fg) !important;\n}\n\n.color-text-danger {\n  color: var(--color-danger-fg) !important;\n}\n\n.color-text-warning {\n  color: var(--color-checks-step-warning-text) !important;\n}\n\n.color-fg-muted {\n  color: var(--color-fg-muted) !important;\n}\n\n.octicon {\n  display: inline-block;\n  overflow: visible !important;\n  vertical-align: text-bottom;\n  fill: currentColor;\n  margin-right: 7px;\n  flex: none;\n}\n</style>  \n  `\n}\n\nfunction reportNavbarStyles() {\n  return `\n<style>\n\n.report-navbar {\n  display: flex;\n  whitespace: nowrap;\n}\n\n.nav-item {\n  flex: none;\n  position: relative;\n  float: left;\n  padding: 5px 10px;\n  font-weight: 500;\n  line-height: 20px;\n  color: var(--color-fg-default);\n  color: var(--color-fg-subtle);\n  color: var(--color-fg-muted);\n  border: 1px solid var(--color-border-default);\n  cursor: pointer;\n  background-color: rgb(249, 249, 249);\n}\n\n.nav-item:hover, \n.nav-item.active {\n  background-color: var(--color-canvas-subtle);\n  color: white;\n}\n\n.nav-item:first-child {\n  border-top-left-radius: 6px;\n  border-bottom-left-radius: 6px;\n}\n\n.nav-item:last-child {\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n}\n\n.nav-item + .subnav-item {\n  margin-left: -1px;\n}\n\n.counter {\n  display: inline-block;\n  min-width: 20px;\n  padding: 0 6px;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 18px;\n  color: var(--color-fg-default);\n  color: white;\n  text-align: center;\n  background-color: var(--color-neutral-muted);\n  border: 1px solid transparent;\n  border-radius: 2em;\n}\n\n.nav-item:hover .counter, \n.nav-item.active .counter {\n  color: var(--color-fg-default);\n  background-color: var(--color-neutral-muted);  \n}\n\n\n@media only screen and (max-width: 600px) {\n  .nav-item {\n    border-radius: 0 !important;\n  }\n\n  .nav-item {\n    padding: 5px 3px;\n    border: none;\n  }\n}  \n\n</style>\n  `\n}\n\nfunction expandableStyles() {\n  return `\n\n<style>\n.expandable { \n  background: white;\n}\n\n.expandable-header {\n  border: 1px solid var(--color-border-default);\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n  background-color: var(--color-canvas-subtle);\n  padding: 0 8px;\n  border-bottom: none;\n  margin-top: 24px;\n  font-weight: 600;\n  line-height: 38px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: white;\n}\n\n.expandable-header.expanded-false {\n  border: 1px solid var(--color-border-default);\n  border-radius: 6px;\n}\n\n.expandable-header.expanded-false,\n.expandable-header.expanded-true {\n  cursor: pointer;\n}\n\n.expandable-body {\n  border: 1px solid var(--color-border-default);\n  border-bottom-left-radius: 6px;\n  border-bottom-right-radius: 6px;\n  padding: 16px;\n}\n\n.expandable-body-no-insets {\n  padding: 0;\n}\n\n@media only screen and (max-width: 600px) {\n  .expandable-header {\n    border-radius: 0;\n    border-right: none;\n    border-left: none;\n  }\n\n  .expandable-body {\n    border-radius: 0;\n    border-right: none;\n    border-left: none;\n    padding: 8px;\n  }\n\n  .expandable-body-no-insets {\n    padding: 0; \n  }\n}\n\n</style>    \n  `\n}\n\n// function chipStyles() {\n//   return `\n\n// <style>\n// .chip {\n//   background: white;\n// }\n\n// .chip-header {\n//   border: 1px solid var(--color-border-default);\n//   border-top-left-radius: 6px;\n//   border-top-right-radius: 6px;\n//   background-color: var(--color-canvas-subtle);\n//   padding: 0 8px;\n//   border-bottom: none;\n//   margin-top: 24px;\n//   font-weight: 600;\n//   line-height: 38px;\n//   white-space: nowrap;\n//   overflow: hidden;\n//   text-overflow: ellipsis;\n//   color: white;\n// }\n\n// .chip-header.expanded-false {\n//   border: 1px solid var(--color-border-default);\n//   border-radius: 6px;\n// }\n\n// .chip-header.expanded-false,\n// .chip-header.expanded-true {\n//   cursor: pointer;\n// }\n\n// .chip-body {\n//   border: 1px solid var(--color-border-default);\n//   border-bottom-left-radius: 6px;\n//   border-bottom-right-radius: 6px;\n//   padding: 16px;\n// }\n\n// .chip-body-no-insets {\n//   padding: 0;\n// }\n\n// @media only screen and (max-width: 600px) {\n//   .chip-header {\n//     border-radius: 0;\n//     border-right: none;\n//     border-left: none;\n//   }\n\n//   .chip-body {\n//     border-radius: 0;\n//     border-right: none;\n//     border-left: none;\n//     padding: 8px;\n//   }\n\n//   .chip-body-no-insets {\n//     padding: 0;\n//   }\n// }\n\n// </style>\n//   `\n// }\n\nfunction testResultStyles() {\n  return `\n\n<style>\n\n.test-case {\n  height: 38px;\n  line-height: 38px;\n  align-items: center;\n  padding: 0 10px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  cursor: pointer;\n}\n\n.test-case:hover {\n  background-color: var(--color-canvas-subtle);\n  color: white;\n}\n\n.test-case-desc {\n  padding: 0 0 0 8px;\n  color: var(--color-fg-muted);\n}\n\n.test-case-outcome-skipped {\n  color: var(--color-fg-muted);\n}\n\n.test-case:not(:first-child) {\n  border-top: 1px solid var(--color-border-default);\n}\n\n</style>  \n  `\n}\n\nfunction errorMessageBoxStyles() {\n  return `\n<style>\n.success-message-box-wrapper {\n  border-top: solid 1px rgba(222, 222, 222, 0.9);\n  padding: 8px;  \n}\n\n.error-message-box-wrapper {\n  border-top: solid 1px rgba(222, 222, 222, 0.9);\n  padding: 4px 0;\n}\n.error-message-box {\n  padding: 4px 8px;\n  display: flex; \n  flex-direction: column;\n  gap: 0.75rem;\n  max-width: 100%;\n}\n.error-message-box .title {\n  font-weight: bold;\n  text-transform: uppercase;\n}  \n.error-message-box .italic {\n  font-style: italic;\n}    \n.error-message-box .underline {\n  text-decoration: underline;\n}      \n.error-message-box .dim {\n  color: var(--color-scale-gray-2);\n}\n.error-message-box .error-text.test-name {\n  text-decoration: red wavy underline;\n}\n.error-message-box .error-text.suite-name {\n  font-weight: bold;\n}\n</style>  \n  `\n}\n\nfunction reportStyles() {\n  return `\n\n<style>\n.htmlreport {\n  position: relative;\n  background: white;\n  background: rgb(248, 249, 253);\n  height: 100%;\n  height: 100vh;\n  overflow-y: scroll;\n  border-left: solid 1px #cecece;\n  padding-bottom: 1rem;\n  padding: 1.5rem;\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n}\n.htmlreport .report-close-icon {\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  cursor: pointer;\n}\nspan.html-colored-formatter {\n  /* word-wrap: break-word; */\n  overflow-wrap: break-word;\n}\nspan.pretty {\n  word-break: break-word;\n}\n.suites {\n  padding-bottom: 1rem;\n}\n@media only screen and (max-width: 600px) {\n  .report {\n    padding: 0 !important;\n  }\n}  \n</style>\n  `\n}\n\nfunction loaderStyles() {\n  return `\n\n<style>\n.regular-loading .loader {\n  margin: auto;\n  width: 60px;\n  height: 50px;\n  font-size: 10px;\n  top: calc(50% - 25px);\n  position: relative;\n}\n\n.regular-loading .loader>span {\n  height: 100%;\n  width: 5px;\n  display: block;\n  float: left;\n  margin: 0 7.5px;\n  margin-bottom: 0.6em;\n  animation: loader-animation-red 1.2s infinite ease-in-out;\n}\n\n.regular-loading .loader span:nth-child(2) {\n  animation-delay: -1s;\n}\n\n.regular-loading .loader span:nth-child(3) {\n  animation-delay: -0.8s;\n}\n\n@keyframes loader-animation-red {\n\n  0%,\n  20% {\n      background-color: #999999;\n      transform: scaleY(0.6);\n      -webkit-transform: scaleY(0.6);\n  }\n\n  50% {\n      background-color: #cc0000;\n      transform: scaleY(1.5);\n      -webkit-transform: scaleY(1.5);\n  }\n\n  100% {\n      background-color: #999999;\n      transform: scaleY(0.6);\n      -webkit-transform: scaleY(0.6);\n  }\n}\n</style>    \n  `\n}\n\nexport function createHead() {\n  return `\n<head>\n\n${rootStyles()}\n\n${reportGlobalStyles()}\n\n${iconStyles()}\n\n${reportNavbarStyles()}\n\n${expandableStyles()}\n\n${testResultStyles()}\n\n${errorMessageBoxStyles()}\n\n${reportStyles()}\n\n${loaderStyles()}\n\n</head>\n  `\n}\n","import * as React from \"react\"\n\nlet doc: Document | undefined\nlet win: Window | undefined\nif (typeof document !== \"undefined\") {\n  doc = document\n}\nif (typeof window !== \"undefined\") {\n  win = window\n}\n\nexport const FrameContext = React.createContext({ document: doc, window: win, initialized: 0 })\n\nexport const useFrame = () => React.useContext(FrameContext)\n\nexport const { Provider: FrameContextProvider, Consumer: FrameContextConsumer } = FrameContext\n","import { type Dispatch, type SetStateAction, useCallback, useEffect, useRef, useState } from \"react\"\nimport { useEventListener } from \"./use-event-listener\"\nimport { parseJSON } from \"../utils\"\n\ntype SetValue<T> = Dispatch<SetStateAction<T>>\n\nexport function useLocalStorage<T>(key: string, initialValue: T): [T, SetValue<T>] {\n  const readValue = useCallback((): T => {\n    if (typeof window === \"undefined\") {\n      return initialValue\n    }\n\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? (parseJSON(item) as T) : initialValue\n    } catch (error) {\n      console.warn(`Error reading localStorage key “${key}”:`, error)\n      return initialValue\n    }\n  }, [initialValue, key])\n\n  const [storedValue, setStoredValue] = useState<T>(readValue())\n\n  const setValueRef = useRef<SetValue<T>>()\n\n  setValueRef.current = (value) => {\n    if (typeof window == \"undefined\") {\n      console.warn(`Tried setting localStorage key “${key}” even though environment is not a client`)\n    }\n\n    try {\n      const newValue = value instanceof Function ? value(storedValue) : value\n      window.localStorage.setItem(key, JSON.stringify(newValue))\n      setStoredValue(newValue)\n    } catch (error) {\n      console.warn(`Error setting localStorage key “${key}”:`, error)\n    }\n  }\n\n  const setValue: SetValue<T> = useCallback((value) => setValueRef.current?.(value), [])\n\n  useEffect(() => {\n    setStoredValue(readValue())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleStorageChange = useCallback(() => {\n    setStoredValue(readValue())\n  }, [readValue])\n\n  useEventListener(\"storage\", handleStorageChange)\n\n  return [storedValue, setValue]\n}\n","import * as React from \"react\"\nimport type { TestSuiteMapping, ReportResults, AnyFunction } from \"../types\"\nimport * as microwave from \"react-microwave\"\nimport { useDebouncedCallback } from \"./use-debounced-callback\"\n\nexport interface UseExecuteTestSuitesContext {\n  report: Partial<ReportResults>\n  testsAreRunning: boolean\n}\n\nexport interface UseExecuteTestSuitesParams {\n  testSuites?: TestSuiteMapping\n  RootComponent?: React.ElementType\n  config?: microwave.MicrowaveConfig\n}\n\nlet testsRun = 0\n\nfunction registerCallbackOnViteHMREvent(cb: AnyFunction = () => {}, config: microwave.MicrowaveConfig = {}) {\n  if (import.meta.hot) {\n    if (config?.debug) console.log(\"[REACT-INSTANT-NOODLES]: hot\", { data: import.meta.hot?.data })\n    import.meta.hot.on(\"vite:beforeUpdate\", (data: any) => {\n      if (config?.debug) console.log(\"[REACT-INSTANT-NOODLES]:VITE HMR Data\", { data })\n      cb(data)\n    })\n  }\n}\n\n// TODO: Implement this correctly for webpack\nfunction registerCallbackOnWebackHMREvent(cb: AnyFunction = () => {}, config: microwave.MicrowaveConfig = {}) {\n  if (import.meta.hot) {\n    if (config?.debug) console.log(\"[REACT-INSTANT-NOODLES]: hot\", { data: import.meta.hot?.data })\n    import.meta.hot.on(\"webpack:beforeUpdate\", (data: any) => {\n      if (config?.debug) console.log(\"[REACT-INSTANT-NOODLES]: WEBPACK HMR Data\", { data })\n      cb(data)\n    })\n  }\n}\n\nexport function useExecuteCallbackOnHMR(cb: AnyFunction = () => {}, config: microwave.MicrowaveConfig = {}) {\n  const [init, setInit] = React.useState(false)\n  const listener = React.useRef<AnyFunction | null>(null)\n\n  // eslint-disable-next-line\n  React.useEffect(() => {\n    if (!init) {\n      if (config?.debug) console.log(\"[REACT-INSTANT-NOODLES]: HMR callback handler initialized\")\n      registerCallbackOnViteHMREvent(cb, config)\n      registerCallbackOnWebackHMREvent(cb, config)\n      listener.current = cb\n      setInit(true)\n    }\n  })\n}\n\nexport async function executedTestsResults({ testSuites, RootComponent }: Omit<UseExecuteTestSuitesParams, \"runs\">) {\n  if (!RootComponent) {\n    console.log(`[REACT-INSTANT-NOODLES]: No RootComponent provided. Skipping test execution.`)\n    return null\n  }\n\n  for (const testSuiteName in testSuites) {\n    const testSuite = testSuites[testSuiteName]\n    const register = testSuite(RootComponent)\n    if (!register) {\n      console.log(\n        `[REACT-INSTANT-NOODLES]: No suite object returned for ${testSuiteName}. Skipping tests for ${testSuiteName}.`\n      )\n      continue\n    }\n    // auto register test suites in case the user forgot to do it\n    register.run()\n  }\n\n  const results = await microwave.exec()\n\n  return results.toJson()\n}\n\nexport function useExecuteTestSuites({\n  testSuites,\n  RootComponent,\n  config,\n}: UseExecuteTestSuitesParams): UseExecuteTestSuitesContext {\n  const [testsAreRunning, setTestsAreRunning] = React.useState(false)\n  const [reportResults, setReportResults] = React.useState<Partial<ReportResults>>({})\n  const timeout = React.useRef<ReturnType<typeof setTimeout> | null>(null)\n\n  const debouncedExecuteTests = useDebouncedCallback(() => {\n    const runTests = async () => {\n      setTestsAreRunning(true)\n      const results = await executedTestsResults({ testSuites, RootComponent })\n      setReportResults((s) => ({ ...s, ...results }))\n      testsRun++\n      if (config?.debug) console.log(`[REACT-INSTANT-NOODLES]: TEST RUNS ${testsRun}`)\n      setTestsAreRunning(false)\n    }\n\n    runTests()\n  }, 50)\n\n  React.useEffect(() => {\n    // TODO: Improve this debounced double test execution to force a report render\n    setTimeout(() => {\n      debouncedExecuteTests()\n    }, 150)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  // // TODO: Find a better way to do this\n  useExecuteCallbackOnHMR((data) => {\n    if (config?.debug)\n      console.log({ message: \"[REACT-INSTANT-NOODLES]: Creating timeout to execute tests after HMR\", data })\n    // give the hot module reload time to update the module\n    // before running the tests\n    if (timeout.current) {\n      clearTimeout(timeout.current)\n    }\n    timeout.current = setTimeout(() => {\n      if (config?.debug) console.log(\"[REACT-INSTANT-NOODLES]: Running tests after HMR\")\n      debouncedExecuteTests()\n    }, 100)\n  }, config)\n\n  return { report: reportResults, testsAreRunning }\n}\n","import { useRef, useEffect, useMemo } from \"react\"\n\nexport interface CallOptions {\n  leading?: boolean\n  trailing?: boolean\n}\n\nexport interface Options extends CallOptions {\n  maxWait?: number\n}\n\nexport interface ControlFunctions {\n  cancel: () => void\n  flush: () => void\n  isPending: () => boolean\n}\n\n/**\n * Subsequent calls to the debounced function `debounced.callback` return the result of the last func invocation.\n * Note, that if there are no previous invocations it's mean you will get undefined. You should check it in your code properly.\n */\nexport interface DebouncedState<T extends (...args: any[]) => ReturnType<T>> extends ControlFunctions {\n  (...args: Parameters<T>): ReturnType<T> | undefined\n}\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked, or until the next browser frame is drawn. The debounced function\n * comes with a `cancel` method to cancel delayed `func` invocations and a\n * `flush` method to immediately invoke them. Provide `options` to indicate\n * whether `func` should be invoked on the leading and/or trailing edge of the\n * `wait` timeout. The `func` is invoked with the last arguments provided to the\n * debounced function. Subsequent calls to the debounced function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `debounce` and `throttle`.\n *\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0]\n *  The number of milliseconds to delay; if omitted, `requestAnimationFrame` is\n *  used (if available, otherwise it will be setTimeout(...,0)).\n * @param {Object} [options={}] The options object.\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.leading=false]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {number} [options.maxWait]\n *  Specify invoking on the trailing edge of the timeout.\n * @param {boolean} [options.trailing=true]\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * const resizeHandler = useDebouncedCallback(calculateLayout, 150);\n * window.addEventListener('resize', resizeHandler)\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * const clickHandler = useDebouncedCallback(sendMail, 300, {\n *   leading: true,\n *   trailing: false,\n * })\n * <button onClick={clickHandler}>click me</button>\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * const debounced = useDebouncedCallback(batchLog, 250, { 'maxWait': 1000 })\n * const source = new EventSource('/stream')\n * source.addEventListener('message', debounced)\n *\n * // Cancel the trailing debounced invocation.\n * window.addEventListener('popstate', debounced.cancel)\n *\n * // Check for pending invocations.\n * const status = debounced.pending() ? \"Pending...\" : \"Ready\"\n */\nexport function useDebouncedCallback<T extends (...args: any[]) => ReturnType<T>>(\n  func: T,\n  wait?: number,\n  options?: Options\n): DebouncedState<T> {\n  const lastCallTime = useRef(null)\n  const lastInvokeTime = useRef(0)\n  const timerId = useRef(null)\n  const lastArgs = useRef<unknown[]>([])\n  const lastThis = useRef<unknown>()\n  const result = useRef<ReturnType<T>>()\n  const funcRef = useRef(func)\n  const mounted = useRef(true)\n\n  funcRef.current = func\n\n  // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.\n  const useRAF = !wait && wait !== 0 && typeof window !== \"undefined\"\n\n  if (typeof func !== \"function\") {\n    throw new TypeError(\"Expected a function\")\n  }\n\n  // @ts-ignore\n  wait = +wait || 0\n  options = options || {}\n\n  const leading = !!options.leading\n  const trailing = \"trailing\" in options ? !!options.trailing : true // `true` by default\n  const maxing = \"maxWait\" in options\n  // @ts-ignore\n  const maxWait = maxing ? Math.max(+options.maxWait || 0, wait) : null\n\n  useEffect(() => {\n    mounted.current = true\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  // You may have a question, why we have so many code under the useMemo definition.\n  //\n  // This was made as we want to escape from useCallback hell and\n  // not to initialize a number of functions each time useDebouncedCallback is called.\n  //\n  // It means that we have less garbage for our GC calls which improves performance.\n  // Also, it makes this library smaller.\n  //\n  // And the last reason, that the code without lots of useCallback with deps is easier to read.\n  // You have only one place for that.\n  const debounced = useMemo(() => {\n    const invokeFunc = (time: number) => {\n      const args = lastArgs.current\n      const thisArg = lastThis.current\n      // @ts-ignore\n      lastArgs.current = lastThis.current = null\n      lastInvokeTime.current = time\n      return (result.current = funcRef.current.apply(thisArg, args))\n    }\n\n    const startTimer = (pendingFunc: () => void, wait: number) => {\n      // @ts-ignore\n      if (useRAF) cancelAnimationFrame(timerId.current)\n      // @ts-ignore\n      timerId.current = useRAF ? requestAnimationFrame(pendingFunc) : setTimeout(pendingFunc, wait)\n    }\n\n    const shouldInvoke = (time: number) => {\n      if (!mounted.current) return false\n      // @ts-ignore\n      const timeSinceLastCall = time - lastCallTime.current\n      const timeSinceLastInvoke = time - lastInvokeTime.current\n\n      // Either this is the first call, activity has stopped and we're at the\n      // trailing edge, the system time has gone backwards and we're treating\n      // it as the trailing edge, or we've hit the `maxWait` limit.\n      return (\n        !lastCallTime.current ||\n        // @ts-ignore\n        timeSinceLastCall >= wait ||\n        timeSinceLastCall < 0 ||\n        // @ts-ignore\n        (maxing && timeSinceLastInvoke >= maxWait)\n      )\n    }\n\n    const trailingEdge = (time: number) => {\n      timerId.current = null\n\n      // Only invoke if we have `lastArgs` which means `func` has been\n      // debounced at least once.\n      if (trailing && lastArgs.current) {\n        return invokeFunc(time)\n      }\n      // @ts-ignore\n      lastArgs.current = lastThis.current = null\n      return result.current\n    }\n\n    const timerExpired = () => {\n      const time = Date.now()\n      if (shouldInvoke(time)) {\n        return trailingEdge(time)\n      }\n      // https://github.com/xnimorz/use-debounce/issues/97\n      if (!mounted.current) {\n        return\n      }\n      // Remaining wait calculation\n      // @ts-ignore\n      const timeSinceLastCall = time - lastCallTime.current\n      const timeSinceLastInvoke = time - lastInvokeTime.current\n      // @ts-ignore\n      const timeWaiting = wait - timeSinceLastCall\n      // @ts-ignore\n      const remainingWait = maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting\n\n      // Restart the timer\n      startTimer(timerExpired, remainingWait)\n    }\n\n    const func: DebouncedState<T> = (...args: Parameters<T>): ReturnType<T> => {\n      const time = Date.now()\n      const isInvoking = shouldInvoke(time)\n\n      lastArgs.current = args\n      // @ts-ignore\n      lastThis.current = this\n      // @ts-ignore\n      lastCallTime.current = time\n\n      if (isInvoking) {\n        if (!timerId.current && mounted.current) {\n          // Reset any `maxWait` timer.\n          // @ts-ignore\n          lastInvokeTime.current = lastCallTime.current\n          // Start the timer for the trailing edge.\n          // @ts-ignore\n          startTimer(timerExpired, wait)\n          // Invoke the leading edge.\n          // @ts-ignore\n          return leading ? invokeFunc(lastCallTime.current) : result.current\n        }\n        if (maxing) {\n          // Handle invocations in a tight loop.\n          // @ts-ignore\n          startTimer(timerExpired, wait)\n          // @ts-ignore\n          return invokeFunc(lastCallTime.current)\n        }\n      }\n      if (!timerId.current) {\n        // @ts-ignore\n        startTimer(timerExpired, wait)\n      }\n      // @ts-ignore\n      return result.current\n    }\n\n    func.cancel = () => {\n      if (timerId.current) {\n        useRAF ? cancelAnimationFrame(timerId.current) : clearTimeout(timerId.current)\n      }\n      lastInvokeTime.current = 0\n      // @ts-ignore\n      lastArgs.current = lastCallTime.current = lastThis.current = timerId.current = null\n    }\n\n    func.isPending = () => {\n      return !!timerId.current\n    }\n\n    func.flush = () => {\n      return !timerId.current ? result.current : trailingEdge(Date.now())\n    }\n\n    return func\n  }, [leading, maxing, wait, maxWait, trailing, useRAF])\n\n  return debounced\n}\n","export const MICROWAVE_LIVE_REPORT_ROOT_DIV_ID = `microwave-report-div-root`\n","import type { RenderUi } from \"./types\"\nimport * as React from \"react\"\nimport * as parseUtils from \"./utils/parse-utils\"\nimport * as ReactTestRenderer from \"react-test-renderer\"\n\nimport {\n  render as rtlRender,\n  fireEvent,\n  waitFor,\n  screen,\n  queries,\n  within,\n  waitForElementToBeRemoved,\n  cleanup,\n  configure,\n  queryHelpers,\n  createEvent,\n  prettyFormat,\n  prettyDOM,\n  buildQueries,\n  getSuggestedQuery,\n  getConfig,\n  isInaccessible,\n  logDOM,\n  logRoles,\n  getElementError,\n} from \"@testing-library/react\"\nimport { assert, exec, type IMicrowaveSuite, suite, updateConfig } from \"react-microwave\"\n\nconst htmlDocumentString = `<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>React Challenges</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  </head>\n  <body>\n    <main></main>\n  </body>\n</html>`\n\nconst documentCache: { doc: Document | null } = {\n  doc: null,\n}\n\nconst createHtmlDocumentShim = (html = htmlDocumentString) => {\n  if (!documentCache.doc) {\n    documentCache.doc = new window.DOMParser().parseFromString(html, \"text/html\")\n    if (!documentCache.doc?.defaultView) {\n      Object.defineProperty(documentCache.doc, \"defaultView\", {\n        value: window,\n      })\n    }\n  }\n\n  return documentCache.doc\n}\n\nconst createResetFunction = (dummyDocument: Document) => {\n  function reset() {\n    dummyDocument.title = \"\"\n    dummyDocument.head.innerHTML = `<meta charset=\"utf-8\" />\n  <title>React Challenges</title>\n  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />`\n    dummyDocument.body.innerHTML = \"<main></main>\"\n  }\n\n  return reset\n}\n\nconst createRenderFunction = (dummyDocument: Document) => {\n  function render(ui: React.ReactElement, options = {}): ReturnType<typeof rtlRender> {\n    const Wrapper = ({ children }: { children: RenderUi }) => <React.Fragment>{children}</React.Fragment>\n    return rtlRender(ui, {\n      container: dummyDocument.querySelector(\"main\") as HTMLElement,\n      wrapper: Wrapper,\n      ...options,\n    })\n  }\n\n  return render\n}\n\nfunction configureMicrowave(dummyDocument: Document) {\n  const reset = createResetFunction(dummyDocument)\n\n  const wrappedSuite = (name: string): IMicrowaveSuite => {\n    const testSuite = suite(name) as IMicrowaveSuite\n    // ensure the document is reset after each test\n    testSuite.after.each?.(() => {\n      reset()\n      cleanup()\n    })\n\n    // return the original test suite\n    return testSuite\n  }\n\n  return {\n    assert,\n    exec,\n    suite: wrappedSuite,\n    updateConfig,\n  }\n}\n\nexport function configureSpecSuite() {\n  const dummyDocument = createHtmlDocumentShim()\n  const render = createRenderFunction(dummyDocument)\n  const microwave = configureMicrowave(dummyDocument)\n\n  return {\n    render,\n    fireEvent,\n    waitFor,\n    screen,\n    queries,\n    within,\n    waitForElementToBeRemoved,\n    cleanup,\n    configure,\n    queryHelpers,\n    createEvent,\n    prettyFormat,\n    prettyDOM,\n    buildQueries,\n    getSuggestedQuery,\n    getConfig,\n    isInaccessible,\n    logDOM,\n    logRoles,\n    getElementError,\n    reactTestRenderer: {\n      create: ReactTestRenderer.create,\n      act: ReactTestRenderer.act,\n    },\n    parseUtils,\n    dummyDocument,\n    ...microwave,\n  }\n}\n"],"mappings":"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","names":[]}